<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RoleLogoutLog">
    <resultMap id="BaseResultMap" type="RoleLogoutLog">
        <result column="game_id" property="gameId"/>
        <result column="channel_id" property="channelId"/>
        <result column="media_id" property="mediaId"/>
        <result column="device_id" property="deviceId"/>
        <result column="version_name" property="versionName"/>
        <result column="version_code" property="versionCode"/>
        <result column="user_id" property="accountId"/>
        <result column="server_id" property="serverId"/>
        <result column="log_time" property="logTime"/>
        <result column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="role_level" property="roleLevel"/>
        <result column="role_gender" property="roleGender"/>
        <result column="battle_points" property="rolePower"/>
        <result column="role_type" property="roleType"/>
        <result column="vip_level" property="vipLevel"/>
        <result column="log_name" property="logName"/>
    </resultMap>

    <resultMap id="Level" type="LevelEntity">
        <result column="level" property="level"/>
        <result column="playNum" property="playNum"/>
        <result column="maxPower" property="maxPower"/>
        <result column="avgPower" property="avgPower"/>
    </resultMap>

    <resultMap id="Occupation" type="OccupationEntity">
        <result column="roleType" property="roleType"/>
        <result column="num" property="num"/>
        <result column="maxPower" property="maxPower"/>
        <result column="avgPower" property="avgPower"/>
    </resultMap>


  <resultMap id="activeList" type="ActiveEntity">
    <result column="logTime" property="logTime"/>
    <result column="activeNum" property="activeNum"/>
    <result column="assistNum" property="assistNum"/>
    <result column="participationRate" property="participationRate"/>
    <result column="treasureNum" property="treasureNum"/>
    <result column="participationRate1" property="participationRate1"/>
    <result column="avgTreasureNum" property="avgTreasureNum"/>
    <result column="wordBossNum" property="wordBossNum"/>
    <result column="participationRate2" property="participationRate2"/>
    <result column="armyBossNum" property="armyBossNum"/>
    <result column="participationRate3" property="participationRate3"/>
    <result column="breakNum" property="breakNum"/>
    <result column="participationRate4" property="participationRate4"/>
    <result column="manorNum" property="manorNum"/>
    <result column="participationRate5" property="participationRate5"/>
    <result column="powerNum" property="powerNum"/>
    <result column="participationRate6" property="participationRate6"/>
    <result column="crystalNum" property="crystalNum"/>
    <result column="participationRate7" property="participationRate7"/>
    <result column="ladderNum" property="ladderNum"/>
    <result column="participationRate8" property="participationRate8"/>
    <result column="pkNum" property="pkNum"/>
    <result column="participationRate9" property="participationRate9"/>
  </resultMap>



    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    game_id ,
    channel_id ,
    media_id ,
    device_id ,
    version_name ,
    version_code ,
    user_id ,
    server_id ,
    from_timestamp(date_time, 'yyyy-MM-dd HH:mm:ss') as log_time,
	role_id ,
	role_name ,
	role_level ,
	role_gender,
	battle_points,
	role_type ,
	vip_level,
	log_name
  </sql>
    <select id="getLoginouts" parameterType="com.umi.ga.entitys.Condition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from faith_server.server_role_login
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>

            <if test="accountId != null and accountId !='' ">
                user_id = #{accountId} and
            </if>
            <if test="roleId != null and roleId !='' ">
                role_id = #{roleId} and
            </if>
            <if test="roleName != null and roleName !='' ">
                role_name = #{roleName} and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>

            <if test="startroleLevel != null and startroleLevel != '' or startroleLevel==0 and  endroleLevel != null and endroleLevel != ''">
                role_level between #{startroleLevel} and #{endroleLevel} and
            </if>

            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
            </if>

        </trim>
        order by log_time desc limit ${pageSize} offset ${pageIndex}
    </select>


    <select id="getLoginoutsCount" parameterType="com.umi.ga.entitys.Condition" resultType="int">
        select
        count(*)
        from faith_server.server_role_login
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>

            <!--  <if test="serverId != null and serverId !='' ">
                serverId in (${serverId}) and
              </if>-->

            <if test="accountId != null and accountId !='' ">
                user_id = #{accountId} and
            </if>
            <if test="roleId != null and roleId !='' ">
                role_id = #{roleId} and
            </if>
            <if test="roleName != null and roleName !='' ">
                role_name = #{roleName} and
            </if>

            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>

            <if test="startroleLevel != null and startroleLevel != '' or startroleLevel==0   and  endroleLevel != null and endroleLevel != ''">
                role_level between #{startroleLevel} and #{endroleLevel} and
            </if>

           <if test="channelId != null and channelId !='' ">
          channel_id in
          <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
            #{channelId}
          </foreach>
        </if>


        </trim>
    </select>


    <select id="getLevelDistributionCount" parameterType="com.umi.ga.entitys.Condition" resultType="int">
        SELECT count(*) FROM
        ( SELECT
        role_level as level ,
        COUNT(distinct role_id) as playNum ,
        MAX(battle_points) as maxPower,
        round(AVG(battle_points),2) as avgPower
        from
        ( select  role_id,max(role_level) as role_level,max(battle_points) as battle_points
        from faith_server.server_role_login
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>
            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
            </if>
        </trim>
        and
        role_level IS NOT NULL
        GROUP BY
        role_id ) a
        GROUP BY
        role_level
        ORDER BY
        role_level )b

    </select>


    <select id="getLevelDistribution" parameterType="com.umi.ga.entitys.Condition" resultMap="Level">
        SELECT
        role_level as level ,
        COUNT(distinct role_id) as playNum ,
        MAX(battle_points) as maxPower,
        round(AVG(battle_points),2) as avgPower
        from
       ( select  role_id,max(role_level) as role_level,max(battle_points) as battle_points
        from faith_server.server_role_login
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>
            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
            </if>
        </trim>
        and
        role_level IS NOT NULL
        GROUP BY
        role_id ) a
        GROUP BY
        role_level
        ORDER BY
        role_level asc  limit ${pageSize} offset ${pageIndex}

    </select>


    <select id="getOccupation" parameterType="com.umi.ga.entitys.Condition" resultMap="Occupation">
        SELECT role_type as roletype,count(role_type) as num,
        max(battle_points) as maxPower,round(avg(battle_points),2) as avgPower
        from faith_server.server_role_login
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>
            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
            </if>
        </trim>
        GROUP BY
        role_type
        ORDER BY
        role_type limit ${pageSize} offset ${pageIndex}

    </select>


    <select id="getOccupationCount" parameterType="com.umi.ga.entitys.Condition" resultType="int">
        select count(*) from
        (SELECT role_type as roletype,count(role_type) as num,
        max(battle_points) as maxPower,round(avg(battle_points),2) as avgPower
        from faith_server.server_role_login
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>
            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
            </if>
        </trim>
        GROUP BY
        role_type
        ORDER BY
        role_type)a

    </select>

    <select id="findAllCount" parameterType="com.umi.ga.entitys.Condition" resultType="int">

 select
 count(*)
from
(
select
from_timestamp(a.date_time, 'yyyy-MM-dd') as logTime,
count(distinct a.role_id) as activeNum,
count(distinct b.role_id) as assistemNum,
count(distinct c.role_id) as treasureNum,
ifnull(sum(c.num),0) as TreasureCount,
count(distinct d.role_id) as wordBossNum,
count(distinct e.role_id) as armyBossNum,
count(distinct f.role_id) as breakNum,
count(distinct g.role_id) as ManorNum,
count(distinct h.role_id) as powerNum,
count(distinct i.role_id) as crystalNum,
count(distinct j.role_id) as ladderNum,
count(distinct k.role_id) as pkNum
from faith_server.server_role_login a
left join faith_server.server_assistant_log b on a.role_id=b.role_id
left join faith_server.server_treasure_log c on a.role_id=c.role_id
left join faith_server.server_beat_boss d on a.role_id=d.role_id and d.active_type='0'
left join faith_server.server_beat_boss e on a.role_id=e.role_id and e.active_type='1'
left join faith_server.server_beat_boss f on a.role_id=f.role_id and f.active_type='2'
left join faith_server.server_manor_log g on a.role_id=g.role_id and g.active_type='0'
left join faith_server.server_manor_log h on a.role_id=h.role_id and h.active_type='1'
left join faith_server.server_crystal_log i on a.role_id=i.role_id
left join faith_server.server_ladder_log j on a.role_id=j.role_id
left join faith_server.server_pk_king_log k on a.role_id = k.role_id
      <trim prefix="where" suffixOverrides="and">
        <if test="null != serverId and '' != serverId">
          a.server_id in
          <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
            #{serverId}
          </foreach>
          and
        </if>
          <if test="starT != null and starT != '' and  endT != null and endT != ''">
              from_timestamp(a.date_time, 'yyyy-MM-dd')  between  #{starT} and #{endT} and
          </if>
        <if test="channelId != null and channelId !='' ">
          a.channel_id in
          <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
            #{channelId}
          </foreach>
        </if>
      </trim>
 group by from_timestamp(a.date_time, 'yyyy-MM-dd') order by from_timestamp(a.date_time, 'yyyy-MM-dd')  desc

)tab

  </select>



  <select id="hive_select_activeList" parameterType="com.umi.ga.entitys.Condition"  resultMap="activeList">
    select
    tab.logTime as logTime,
    tab.activeNum,
    tab.assistemNum,ifnull(round((tab.assistemNum/tab.activeNum),2),0.00) as participationRate,
    tab.treasureNum,ifnull(round((tab.treasureNum/tab.activeNum),2),0.00) as participationRate1,
    ifnull(round((tab.TreasureCount/tab.activeNum),2),0.00) as avgTreasureNum,
    tab.wordBossNum,ifnull(round((tab.wordBossNum/tab.activeNum),2),0.00) as participationRate2,
    tab.armyBossNum,ifnull(round((tab.armyBossNum/tab.activeNum),2),0.00) as participationRate3,
    tab.breakNum,ifnull(round((tab.breakNum/tab.activeNum),2),0.00) as participationRate4,
    tab.ManorNum,ifnull(round((tab.ManorNum/tab.activeNum),2),0.00) as participationRate5,
    tab.powerNum,ifnull(round((tab.powerNum/tab.activeNum),2),0.00) as participationRate6,
    tab.crystalNum,ifnull(round((tab.crystalNum/tab.activeNum),2),0.00) as participationRate7,
    tab.ladderNum,ifnull(round((tab.ladderNum/tab.activeNum),2),0.00) as participationRate8,
    tab.pkNum,ifnull(round((tab.pkNum/tab.activeNum),2),0.00) as participationRate9
    from
    (
    select
      from_timestamp(a.date_time, 'yyyy-MM-dd') as logTime,
 /*     from_unixtime(cast(a.log_time / 1000 as bigint), 'yyyy-MM-dd') as logTime,*/
    count(distinct a.role_id) as activeNum,
    count(distinct b.role_id) as assistemNum,
    count(distinct c.role_id) as treasureNum,
    ifnull(sum(c.num),0) as TreasureCount,
    count(distinct d.role_id) as wordBossNum,
    count(distinct e.role_id) as armyBossNum,
    count(distinct f.role_id) as breakNum,
    count(distinct g.role_id) as ManorNum,
    count(distinct h.role_id) as powerNum,
    count(distinct i.role_id) as crystalNum,
    count(distinct j.role_id) as ladderNum,
    count(distinct k.role_id) as pkNum
    from faith_server.server_role_login a
    left join faith_server.server_assistant_log b on a.role_id=b.role_id
    left join faith_server.server_treasure_log c on a.role_id=c.role_id
    left join faith_server.server_beat_boss d on a.role_id=d.role_id and d.active_type='0'
    left join faith_server.server_beat_boss e on a.role_id=e.role_id and e.active_type='1'
    left join faith_server.server_beat_boss f on a.role_id=f.role_id and f.active_type='2'
    left join faith_server.server_manor_log g on a.role_id=g.role_id and g.active_type='0'
    left join faith_server.server_manor_log h on a.role_id=h.role_id and h.active_type='1'
    left join faith_server.server_crystal_log i on a.role_id=i.role_id
    left join faith_server.server_ladder_log j on a.role_id=j.role_id
    left join faith_server.server_pk_king_log k on a.role_id = k.role_id
    <trim prefix="where" suffixOverrides="and">
      <if test="null != serverId and '' != serverId">
        a.server_id in
        <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
          #{serverId}
        </foreach>
        and
      </if>
      <if test="starT != null and starT != '' and  endT != null and endT != ''">
          from_timestamp(a.date_time, 'yyyy-MM-dd')  between  #{starT} and #{endT} and
      </if>
      <if test="channelId != null and channelId !='' ">
        a.channel_id in
        <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
          #{channelId}
        </foreach>
      </if>
    </trim>
    group by from_timestamp(a.date_time, 'yyyy-MM-dd') order by  from_timestamp(a.date_time, 'yyyy-MM-dd') desc limit ${pageSize} offset ${pageIndex}

    )tab

  </select>







    <select id="findActiveNum" parameterType="com.umi.ga.entitys.Condition" resultType="int">
        select count(distinct role_id) from faith_server.server_role_login
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                log_time between #{startTime} and #{endTime} and
            </if>
            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
            </if>
        </trim>


    </select>


</mapper>