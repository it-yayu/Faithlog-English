<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--<bean id="parentDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">-->
    <!--<property master="driverClassName" value="com.mysql.jdbc.Driver" />-->
    <!--&lt;!&ndash; 连接只读数据库时配置为true， 保证安全 &ndash;&gt;-->
    <!--<property master="readOnly" value="false" />-->
    <!--&lt;!&ndash; 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 &ndash;&gt;-->
    <!--<property master="connectionTimeout" value="30000" />-->
    <!--&lt;!&ndash; 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 &ndash;&gt;-->
    <!--<property master="idleTimeout" value="600000" />-->
    <!--&lt;!&ndash; 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） &ndash;&gt;-->
    <!--<property master="maxLifetime" value="1800000" />-->
    <!--&lt;!&ndash; 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) &ndash;&gt;-->
    <!--<property master="maximumPoolSize" value="10" />-->
    <!--</bean>-->

    <!-- MySQL 数据源 -->
    <bean id="masterDataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="jdbcUrl" value="${master.jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!-- 连接只读数据库时配置为true， 保证安全 -->
        <property name="readOnly" value="false"/>
        <property name="connectionTimeout" value="30000"/>
        <property name="idleTimeout" value="600000"/>
        <property name="maxLifetime" value="1200000"/>
        <property name="maximumPoolSize" value="180"/>
        <property name="minimumIdle" value="50"/>
    </bean>
    <!-- impala 数据源 -->
    <bean id="hiveDataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="jdbcUrl" value="${impala.url}"/>
        <property name="driverClassName" value="com.cloudera.impala.jdbc41.Driver"/>
    </bean>

    <!-- hive 数据源 -->
    <!--    <bean id="hiveDataSource" class="com.zaxxer.hikari.HikariDataSource">-->
    <!--        <property name="jdbcUrl" value="${hive.url}"/>-->
    <!--        <property name="username" value="${hive.username}"/>-->
    <!--        <property name="password" value="${hive.password}"/>-->
    <!--        &lt;!&ndash; 连接只读数据库时配置为true， 保证安全 &ndash;&gt;-->
    <!--        <property name="readOnly" value="false"/>-->
    <!--        <property name="connectionTimeout" value="500000"/>-->
    <!--        <property name="idleTimeout" value="600000"/>-->
    <!--        <property name="maxLifetime" value="1200000"/>-->
    <!--        <property name="maximumPoolSize" value="400"/>-->
    <!--        <property name="minimumIdle" value="100"/>-->
    <!--    </bean>-->

    <bean id="dataSource" class="com.comb.framework.db.dbroute.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="master" value-ref="masterDataSource"/>
                <entry key="hivemaster" value-ref="hiveDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>


    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 支持 @Transactional 标记 -->
    <tx:annotation-driven transaction-manager="transactionManager" order="10"/>

</beans>