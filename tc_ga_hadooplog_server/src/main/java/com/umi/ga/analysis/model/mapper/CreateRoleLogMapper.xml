<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CreateRoleLog">
    <resultMap id="BaseResultMap" type="CreateRoleLog">
        <result column="game_id" property="gameId" />
        <result column="channel_id" property="channelId" />
        <result column="media_id" property="mediaId" />
        <result column="device_id" property="deviceId" />
        <result column="version_name" property="versionName" />
        <result column="version_code" property="versionCode" />
        <result column="user_id" property="accountId" />
        <result column="server_id"  property="serverId" />
        <result column="log_time"  property="logTime" />
        <result column="role_id" property="roleId" />
        <result column="role_name"  property="roleName" />
        <result column="role_level" property="roleLevel" />
        <result column="role_gender"  property="roleGender" />
        <result column="battle_points"  property="rolePower" />
        <result column="role_type" property="career" />
        <result column="vip_level" property="vipLevel" />
        <result column="log_name" property="logName" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
      game_id ,
    channel_id ,
    media_id ,
    device_id ,
    version_name ,
    version_code ,
    user_id ,
    server_id ,
    from_timestamp(date_time, 'yyyy-MM-dd HH:mm:ss') as log_time,
	role_id ,
	role_name ,
	role_level ,
	role_gender,
	battle_points,
	role_type ,
	vip_level,
	log_name

  </sql>
    <select id="getcreate_role_log" resultMap="BaseResultMap" parameterType="com.umi.ga.entitys.Condition">
        select
        <include refid="Base_Column_List"/>
        from faith_server.server_role_create
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>

            <if test="accountId != null and accountId != ''">
                user_id = #{accountId} and
            </if>
            <if test="deviceId != null and deviceId != ''">
                device_id = #{deviceId} and
            </if>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId} and
            </if>
            <if test="roleName != null and roleName !='' ">
                role_name = #{roleName} and
            </if>

            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>
             <if test="channelId != null and channelId !='' ">
          channel_id in
          <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
            #{channelId}
          </foreach>
        </if>

        </trim>
        ORDER BY log_time DESC limit  ${pageSize}  offset ${pageIndex}
    </select>



    <select id="getcreate_role_log_count" resultType="int" parameterType="com.umi.ga.entitys.Condition">
        select
       count(*)
        from faith_server.server_role_create
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>

            <if test="accountId != null and accountId != ''">
                user_id = #{accountId} and
            </if>
            <if test="deviceId != null and deviceId != ''">
                device_id = #{deviceId} and
            </if>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId} and
            </if>
            <if test="roleName != null and roleName !='' ">
                role_name = #{roleName} and
            </if>

            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>
             <if test="channelId != null and channelId !='' ">
          channel_id in
          <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
            #{channelId}
          </foreach>
        </if>

        </trim>

    </select>



    <select id="test" resultType="int" parameterType="com.umi.ga.entitys.Condition">
        select count(*) from faithtest.serveraccountcreate1
    </select>

</mapper>