<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ServerEarlyWarning">
    <resultMap id="BaseResultMap" type="ServerEarlyWarning">
        <result column="game_id" property="gameId"/>
        <result column="channel_id" property="channelId"/>
        <result column="media_id" property="mediaId"/>
        <result column="device_id" property="deviceId"/>
        <result column="version_name" property="versionName"/>
        <result column="version_code" property="versionCode"/>
        <result column="user_id" property="accountId"/>
        <result column="server_id" property="serverId"/>
        <result column="log_time" property="logTime"/>
        <result column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="role_level" property="roleLevel"/>
        <result column="role_gender" property="roleGender"/>
        <result column="battle_points" property="rolePower"/>
        <result column="role_type" property="roleType"/>
        <result column="vip_level" property="vipLevel"/>
        <result column="online_time" property="onlineTime"/>
    </resultMap>


    <resultMap id="BaseResultMap1" type="OnlineTimeEveryDay">
        <result column="log_time" property="logTime"/>
        <result column="online_time" property="onlineTime"/>
    </resultMap>



    <sql id="Base_Column_List">
    game_id ,
    channel_id ,
    media_id ,
    device_id ,
    version_name ,
    version_code ,
    user_id ,
    server_id ,
    from_timestamp(date_time, 'yyyy-MM-dd HH:mm:ss') as log_time,
	role_id ,
	role_name ,
	role_level ,
	role_gender,
	battle_points,
	role_type ,
	vip_level,
	online_time
  </sql>
    <select id="hive_select_ServerEarlyWarning" parameterType="com.umi.ga.analysis.model.ServerEarlyWarning" resultMap="BaseResultMap">
        select b.user_id,b.role_id,b.role_name,b.vip_level,b.role_type,b.log_time,b.online_time,b.server_id,b.channel_id,c.role_level,c.battle_points from
        (select  a.user_id, a.role_id, a.role_name, a.role_level,a.vip_level,a.role_type, a.battle_points,a.log_time,a.online_time,a.server_id,a.channel_id from
       ( select
       server_id,
       channel_id,
        user_id,
        role_id,
        role_name,
        max(vip_level) as vip_level,
        role_type,
        max(role_level) as role_level,
        max(battle_points) as battle_points,
        from_timestamp(max(date_time), 'yyyy-MM-dd') as log_time,
        ROUND(MAX(online_time)/60,0)as online_time
        from faith_server.server_early_warning
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>

            <if test="roleType !=0 and roleType !=null and roleType !='' ">
                role_type = #{roleType} and
            </if>

            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
                and
            </if>

            <if test="type != null and type !='' ">
                vip_level in
                <foreach collection="typeArray" item="type" index="index" open="(" close=")" separator=",">
                    ${type}
                </foreach>

            </if>


        </trim>
        GROUP BY from_timestamp(date_time, 'yyyy-MM-dd') ,user_id,role_id,role_name,role_type,server_id,channel_id)a
        where a.online_time &lt; ${redWarningValue}
        or a.online_time
        between ${redWarningValue} and ${yellowWarningValue}
        order by a.user_id asc,a.role_id asc,a.log_time asc )b
        left join
        (
        select user_id,role_id,max(role_level) as role_level,max(battle_points) as battle_points
        from faith_server.server_early_warning
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>
            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd')  between #{startTime} and #{endTime} and
            </if>

            <if test="roleType !=0 and roleType !=null and roleType !='' ">
                role_type = #{roleType} and
            </if>

            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
                and
            </if>

            <if test="type != null and type !='' ">
                vip_level in
                <foreach collection="typeArray" item="type" index="index" open="(" close=")" separator=",">
                    ${type}
                </foreach>

            </if>

        </trim>
        group by user_id,role_id,role_name
        )c on b.user_id =c.user_id and b.role_id =c.role_id
        order by b.user_id asc,b.role_id asc,b.log_time asc


    </select>


    <select id="hive_select_onlineTime" parameterType="com.umi.ga.analysis.model.ServerEarlyWarning" resultType="integer">
        select round(max(online_time/60),0) from faith_server.server_early_warning where from_timestamp(date_time, 'yyyy-MM-dd') =date_sub(#{yesToDayLogTime},1)
        and role_id = #{roleId}
    </select>





    <select id="hive_serverDailyOnlineTime" parameterType="com.umi.ga.analysis.model.ServerEarlyWarning" resultMap="BaseResultMap1">
        select
        ROUND(MAX(online_time)/60,0) as online_time,
        from_timestamp(date_time, 'yyyy-MM-dd') as log_time
        from faith_server.server_early_warning
        <trim prefix="where" suffixOverrides="and">
            <if test="null != serverId and '' != serverId">
                server_id in
                <foreach collection="stringsArray" item="serverId" index="index" open="(" close=")" separator=",">
                    #{serverId}
                </foreach>
                and
            </if>

            <if test="roleId != null and roleId !='' ">
                role_id = #{roleId} and
            </if>
<!--            <if test="roleName != null and roleName !='' ">-->
<!--                role_name = #{roleName} and-->
<!--            </if>-->

            <if test="startTime != null and startTime != '' and  endTime != null and endTime != ''">
                from_timestamp(date_time, 'yyyy-MM-dd') between #{startTime} and #{endTime} and
            </if>

            <if test="channelId != null and channelId !='' ">
                channel_id in
                <foreach collection="channelArray" item="channelId" index="index" open="(" close=")" separator=",">
                    #{channelId}
                </foreach>
                and
            </if>

        </trim>
        group by from_timestamp(date_time, 'yyyy-MM-dd')
        order by from_timestamp(date_time, 'yyyy-MM-dd') asc
    </select>



</mapper>