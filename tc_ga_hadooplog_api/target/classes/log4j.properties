### set log levels ###
#日志级别
#fatal：非常严重的错误，导致系统中止。期望这类信息能立即显示在状态控制台上。
#error：其它运行期错误或不是预期的条件。期望这类信息能立即显示在状态控制台上。
#warn：使用了不赞成使用的API、非常拙劣使用API, '几乎就是'错误, 其它运行时不合需要和不合预期的状态但还没必要称为 "错误"。期望这类信息能立即显示在状态控制台上。
#info：运行时产生的有意义的事件。期望这类信息能立即显示在状态控制台上。
#debug：系统流程中的细节信息。期望这类信息仅被写入log文件中。
#trace：更加细节的信息。期望这类信息仅被写入log文件中。
#通常情况下，我们希望将info级别以上的日志信息输出到控制台，而debug级别以上的信息写入到log文件中，而error信息写入到一个单独的文件中去。

log4j.rootLogger = INFO ,stdout, D , E

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
## 输出INFO级别以上的日志
log4j.appender.stdout.Threshold = INFO
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}:%L - %m%n

### 输出到日志文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = ./logs/log.log
log4j.appender.D.Append = true
log4j.appender.D.DatePattern = yyyy-MM-dd
## 输出DEBUG级别以上的日志
log4j.appender.D.Threshold = INFO
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %l %m%n

### 保存异常信息到单独文件 ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
## 异常日志文件名
log4j.appender.E.File = ./logs/error.log 
log4j.appender.E.Append = true
 ## 只输出ERROR级别以上的日志!!!
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %l %m%n

#log4j.rootLogger=info, R
#log4j.appender.R=org.apache.log4j.ConsoleAppender
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%-5p %-30.30c{1} %x – %m%n